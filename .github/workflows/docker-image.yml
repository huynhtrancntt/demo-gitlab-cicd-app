name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.9'

  #     - name: Install dependencies
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y make

  #     - name: Run tests
  #       run: make test

  build:
    runs-on: ubuntu-latest
    # needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASS }}

      - name: Build and push Docker image
        env:
          GIT_BRANCH: ${{ github.ref_name }}
          GIT_COMMIT: ${{ github.sha }}
        run: |
          # Tạo tag Docker từ branch name và commit hash
          DOCKER_TAG="${GIT_BRANCH//\//-}-${GIT_COMMIT:0:7}"
          IMAGE_NAME=${{ secrets.IMAGE_NAME }}
          echo "Building Docker image with tag: $DOCKER_TAG"
          docker build -t $IMAGE_NAME:$DOCKER_TAG .
          docker push $IMAGE_NAME:$DOCKER_TAG

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up SSH key
  #       uses: webfactory/ssh-agent@v0.7.0
  #       with:
  #         ssh-private-key: ${{ secrets.SSH_KEY }}

  #     - name: Deploy to server
  #       env:
  #         GIT_COMMIT: ${{ github.sha }}
  #         IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  #       run: |
  #         DOCKER_TAG="${GIT_BRANCH//\//-}-${GIT_COMMIT:0:7}"
  #         ssh -o StrictHostKeyChecking=no root@35.247.145.253 "
  #           docker login -u ${{ secrets.REGISTRY_USER }} -p ${{ secrets.REGISTRY_PASS }} &&
  #           docker pull $IMAGE_NAME:$DOCKER_TAG &&
  #           docker run -d -p 5000:5000 $IMAGE_NAME:$DOCKER_TAG"
